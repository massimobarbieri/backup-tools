#!/bin/bash
# ==================================================================
# bkp-ssh - Smple script for you backup
# ==================================================================
# @authors: Massimo Barbieri (massimo@fsfe.org)
#           (Add your name if you contribute)
# @Mantainer: Massimo Barbieri (massimo@fsfe.org) 
# @copyright 2011 GNU GPLv3
# ==================================================================
# This script is free software; you can redistribute it and/or
# modify it under the terms of the GNU GENERAL PUBLIC LICENSE
# License as published by the Free Software Foundation; either 
# version 3 of the License, or any later version.
# 
# You should have received a copy of the GNU General Public 
# License along with this library.
# If not, see <http://www.gnu.org/licenses/>.
####################################################################
# Effettua il backup via ssh con rsync
# TODO: Aggiungere supporto alla crittografia

# Carica il file di configurazione globale
source /etc/backup-tools.conf

# L'opzione -u seguita dal nome utente deve essere aggiunta 
# come prima opzione e permette di eseguire il programma usando
# un'altra configurazione utente
if [ "$1" == "-u" ]
then
	USERCONF="/home/$2/.backup-tools.conf"
else
	#USERCONF=$(file ~/.backup-tools.conf | awk '{print $1}' | sed s/://)
	USERCONF=$(echo $HOME/.backup-tools.conf)
fi

if [ -f $USERCONF ]
then
	source $USERCONF
else
	cp $CONFTEMPLATE $USERCONF
	if [ $? == 0 ]
		then
		echo "Please configure your $USERCONF"
	fi
fi

if [ $SORGENTESSH ]
then
	SORGENTE=$(echo $SORGENTESSH)
else
	SORGENTE=$(echo $SORGENTE)
fi


# Controlla se la cartella remota esiste
ssh $USERNAME@$SERVER "[ -d $REMOTEDIR ]"
if [ "$?" == "0" ]
then
	ACTIVEREMOTEDIR="Yes"
else
	ACTIVEREMOTEDIR="No"
fi


# Se i controlli sopra vanno a buon fine decide se eseguire il backup
if [ "$ACTIVEREMOTEDIR" == "Yes" ]
then
	echo "The SSH server $SERVER is active and remote directory $REMOTEDIR exists!"
	echo "Starting backup now!"
	logger `hostname` The SSH server $SERVER is active -t $TAG
	logger `hostname` Starting backup of $SORGENTE over $SERVER:$REMOTEDIR -t $TAG

	# opzione --delete
	if [ "$1" == "--delete" ] || [ "$3" == "--delete" ]
	then
		echo Richiesta opzione delete sul comando rsync...
		echo Verifico se questo è consentito dalle configurazioni globali...
		logger `hostname` richiesta opzione delete

		# Verifica che nelle configurazioni globali l'esecuzione di --delete, potenzialmente
		# rischiosa, sia consentita
		if [ $RSYNC_CAN_DELETE == "true" ]
		then
			echo Eseguo il backup con --delete....
			DELETE="--delete"
		else
			echo "### WARNING: Le configurazioni globali impediscono il delete su rsync"
			DELETE=""
		fi
	else
		DELETE=""
	fi

	
	if [ $EXCLUDE ]
	then
		echo Eseguo con exclude
		#rsync -av $DELETE --exclude-from=$EXCLUDE $SORGENTE $TARGET/
		echo "rsync -avz -e ssh $DELETE --exclude-from=$EXCLUDE $SORGENTE $USERNAME@$SERVER:$REMOTEDIR"
	else
		echo Eseguo senza exclude
		rsync -avz -e ssh $DELETE $SORGENTE $USERNAME@$SERVER:$REMOTEDIR
	fi

	#rsync -avz -e ssh $SORGENTE $USERNAME@$SERVER:$REMOTEDIR
else
	echo "Remote SSH server gives the following output:"
	echo "Remote dir exists = $ACTIVEREMOTEDIR"
	echo "Exit with errors"
	logger `hostname` Backup failed with errors. Active server is $ACTIVESERVER -t $TAG
	logger `hostname` Backup failed with errors. Active remote dir is $ACTIVEREMOTEDIR -t $TAG
	exit 1
fi

# TODO: Aggiungere flag per supporto crittografia
#	Andra a leggere le variabili sul file di conf

# Comando di backup principale

# DEBUG: LA riga seguente è stata commentata per debug
#rsync -avz -e ssh $SORGENTE $USERNAME@$SERVER:$REMOTEDIR
